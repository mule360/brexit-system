<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:context="http://www.springframework.org/schema/context"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:mongo="http://www.mulesoft.org/schema/mule/mongo" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.mulesoft.org/schema/mule/mongo http://www.mulesoft.org/schema/mule/mongo/current/mule-mongo.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd">

	<context:property-placeholder location="classpath:properties\${SANDBOX_DOMAIN}\${SANDBOX_SERVER_SHORT_NAME}\${SANDBOX_NAME}.properties"/>
    
    <mongo:config name="Mongo_DB"  host="${mongo.hostname}" username="ralph" database="${mongo.database.name}" doc:name="Mongo DB" />
	<flow name="areas-find-all">
               <mongo:find-objects-using-query-map config-ref="Mongo_DB" doc:name="Areas" collection="Area" >
        	<mongo:fields>
				<mongo:field>areaSize</mongo:field>
				<mongo:field>areaTypeCode</mongo:field>
				<mongo:field>areaTypeName</mongo:field>
				<mongo:field>country</mongo:field>
				<mongo:field>electorate</mongo:field>
				<mongo:field>femalePopulation</mongo:field>
				<mongo:field>gss</mongo:field>
				<mongo:field>identity</mongo:field>
				<mongo:field>latitudeMaximum</mongo:field>
				<mongo:field>latitudeMiddle</mongo:field>
				<mongo:field>latitudeMinimum</mongo:field>
				<mongo:field>leaveVotes</mongo:field>
				<mongo:field>longitudeMaximum</mongo:field>
				<mongo:field>longitudeMiddle</mongo:field>
				<mongo:field>longitudeMinimum</mongo:field>
				<mongo:field>malePopulation</mongo:field>
				<mongo:field>mapItId</mongo:field>
				<mongo:field>name</mongo:field>
				<mongo:field>ons</mongo:field>
				<mongo:field>regionCode</mongo:field>
				<mongo:field>regionName</mongo:field>
				<mongo:field>registered</mongo:field>
				<mongo:field>remainVotes</mongo:field>
				<mongo:field>totalPopulation</mongo:field>
				<mongo:field>unitId</mongo:field>
				<mongo:field>validVotes</mongo:field>
        </mongo:fields>
        </mongo:find-objects-using-query-map>
        <mongo:mongo-collection-to-json doc:name="CollectionToJson" />
	   	 <json:json-to-object-transformer returnClass="java.util.List" doc:name="JSON to List"/>

		<foreach doc:name="Each Area">
			<expression-component doc:name="Remove _ID">payload.remove('_id')</expression-component>
		</foreach>

		<json:object-to-json-transformer  sourceClass="java.util.List"  doc:name="List to JSON"/>
        <logger level="INFO" doc:name="/areas" message="Mongo GET /areas Returned : #[payload]" />

    </flow>
    
	<flow name="areas-find-one-by-identity">
	     <mongo:find-one-object-using-query-map config-ref="Mongo_DB" collection="Area" doc:name="findByIdentity">
	        <mongo:query-attributes>
	            <mongo:query-attribute key="identity">#[identity]</mongo:query-attribute>
	        </mongo:query-attributes>
        	<mongo:fields>
				<mongo:field>areaSize</mongo:field>
				<mongo:field>areaTypeCode</mongo:field>
				<mongo:field>areaTypeName</mongo:field>
				<mongo:field>country</mongo:field>
				<mongo:field>electorate</mongo:field>
				<mongo:field>femalePopulation</mongo:field>
				<mongo:field>gss</mongo:field>
				<mongo:field>identity</mongo:field>
				<mongo:field>latitudeMaximum</mongo:field>
				<mongo:field>latitudeMiddle</mongo:field>
				<mongo:field>latitudeMinimum</mongo:field>
				<mongo:field>leaveVotes</mongo:field>
				<mongo:field>longitudeMaximum</mongo:field>
				<mongo:field>longitudeMiddle</mongo:field>
				<mongo:field>longitudeMinimum</mongo:field>
				<mongo:field>malePopulation</mongo:field>
				<mongo:field>mapItId</mongo:field>
				<mongo:field>name</mongo:field>
				<mongo:field>ons</mongo:field>
				<mongo:field>regionCode</mongo:field>
				<mongo:field>regionName</mongo:field>
				<mongo:field>registered</mongo:field>
				<mongo:field>remainVotes</mongo:field>
				<mongo:field>totalPopulation</mongo:field>
				<mongo:field>unitId</mongo:field>
				<mongo:field>validVotes</mongo:field>
        </mongo:fields>
</mongo:find-one-object-using-query-map>
	        <mongo:dbobject-to-json doc:name="DBObjectToJSON" />
	   	 <json:json-to-object-transformer returnClass="java.util.Map" doc:name="JSON to Map"/>
		<expression-component doc:name="Remove _ID">payload.remove('_id')</expression-component>
       	<json:object-to-json-transformer sourceClass="java.util.Map"  doc:name="Map to JSON" />
        <logger level="INFO" doc:name="/areas/{identity}" message="Mongo GET /area/#[identity]  Returned : #[payload]" />
<!--         <set-payload value="#[payload]" doc:name="Set Payload" /> -->
	
		<choice-exception-strategy doc:name="Choice Exception Strategy">
			<catch-exception-strategy doc:name="Catch Exception Strategy" when="#[exception.causedBy(com.mongodb.MongoException)]">
				<logger level="INFO" doc:name="Logger" message="HANDLING MONGO EXCEPTION #[payload]" />
				<set-variable variableName="errorStatusCode" value="404" doc:name="Set status code"/>
				<set-variable variableName="errorReasonPhrase" value="Not Found" doc:name="Set reason phrase"/>
	            <set-property propertyName="Content-Type" value="application/json" doc:name="Property" />
	            <set-payload value="{ &quot;message&quot;: &quot;Resource not found&quot; }" doc:name="Set Payload" />
				<set-property propertyName="http.status" value="404" doc:name="Property"/>
			</catch-exception-strategy>
			<rollback-exception-strategy doc:name="Rollback Exception Strategy">
				<logger level="INFO" doc:name="Logger" message="Unknown error"/>
			</rollback-exception-strategy>
		</choice-exception-strategy>
      </flow>
    
</mule>
